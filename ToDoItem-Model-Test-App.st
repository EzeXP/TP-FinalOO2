WAComponent subclass: #AgregarItemComponent	instanceVariableNames: 'nombre comentario item stringError toDoList'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!AgregarItemComponent commentStamp: 'I 6/23/2018 18:48' prior: 0!Yo dibujo la interfaz para crear nuevos ToDo items!!AgregarItemComponent methodsFor: 'actions' stamp: 'EzequielMasciarelli 6/20/2018 17:32'!cancel	"NOTA: NO SE ESTA UTILIZANDO EL METODO SELF ANSWER YA QUE PARA NO GENERAR DOS VISTAS DIFERENTES CUANDO SE PRODUCE UN ERROR SE ESTA VOLVIENDO A LLAMAR A ESTA MISMA VISTA DESDE EL SAVE"	self call: IndexToDoItemComponent new! !!AgregarItemComponent methodsFor: 'actions' stamp: 'I 6/22/2018 00:02'!save	nombre = ''		ifFalse: [ item := ToDoItem name: nombre.			comentario = ''				ifFalse: [ item addComment: comentario ].			ToDoList singleton addItem: item.			self answer ]		ifTrue: [ stringError := 'Debe ingresar un nombre antes de guardar' ]! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:26'!crearErrorDeSerNecesario: html	stringError isNil		ifFalse: [ html break.			html text: stringError .			html break ]	! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:25'!inicializarError: aString	stringError:= 'Error, ingrese un nombre'.	nombre := ''.	comentario := aString! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!inicializarNuevonombre :=''.comentario :=''.! !!AgregarItemComponent methodsFor: 'rendering' stamp: 'EzequielMasciarelli 6/20/2018 17:24'!renderContentOn: html	html		tbsContainerFluid: [ html heading: [ html text: 'ToDoList App' ].			html heading				level: 3;				with: 'Crear item'.			self crearErrorDeSerNecesario: html.			html				form: [ html horizontalRule.					html strong: 'Nombre: '.					html space: 20.					html textInput on: #name of: self.					html						break;						break;						break.					html strong: 'Comentarios: '.					html space: 12.					html textInput on: #comment of: self.					html						break;						break.					html submitButton						callback: [ self save ];						value: 'Guardar'.					html space: 30.					html submitButton						callback: [ self cancel ];						value: 'Cancelar' ] ]! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!name: aString	nombre:=aString! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!comment	^ comentario ! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!name	^ nombre ! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!comment: aString	comentario :=aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AgregarItemComponent class	instanceVariableNames: ''!!AgregarItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:02'!nuevoItem	^self new inicializarNuevo! !!AgregarItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:18'!errorDeCampo: aString	^ self new inicializarError:aString! !WAComponent subclass: #DibujadorDeBotones	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!DibujadorDeBotones commentStamp: 'I 6/23/2018 18:48' prior: 0!Yo sé dibujar botones.!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DibujadorDeBotones class	instanceVariableNames: ''!!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:27'!dibujarBotonFinalizadoEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [  ];		width: 30;		height: 30;		resourceUrl: 'https://cdn3.iconfinder.com/data/icons/sympletts-free-sampler/128/circle-check-512.png'.	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 16:58'!dibujarBotonBasuraEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ ToDoList singleton deleteItem: toDoItem.			aVista call: IndexToDoItemComponent new  ];		width: 30;		height: 30;		resourceUrl: 'https://cdn4.iconfinder.com/data/icons/email-2-2/32/Trash-Email-Bin-512.png'.	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:26'!dibujarBotonPausarEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ toDoItem togglePause.			"aVista call: IndexToDoItemComponent new" ];		width: 30;		height: 30;		resourceUrl: 'https://cdn4.iconfinder.com/data/icons/user-interface-59/83/Pause-512.png'.	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:25'!dibujarBotonFinalizarEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ toDoItem finish.			"aVista call: IndexToDoItemComponent new" ];		width: 30;		height: 30;		resourceUrl: 'https://cdn2.iconfinder.com/data/icons/classic-development-circle/512/start_flag-512.png'.	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:26'!dibujarBotonStartEn: html conItem: toDoItem enVista: aVista	html imageButton		width: 30;		height: 30;		url: 'https://image.flaticon.com/icons/svg/26/26025.svg';		callback: [ toDoItem start.			"aVista call: IndexToDoItemComponent new "].	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:26'!dibujarBotonReanudarEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ toDoItem togglePause.			"aVista call: IndexToDoItemComponent new" ];		width: 30;		height: 30;		resourceUrl: 'https://image.flaticon.com/icons/svg/26/26025.svg'.	html space: 5! !WAComponent subclass: #DibujadorDeItems	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!DibujadorDeItems commentStamp: 'I 6/23/2018 18:47' prior: 0!Yo Represento el padre de la jerarquía que determina qué botones se pintan para cada situación!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DibujadorDeItems class	instanceVariableNames: ''!!DibujadorDeItems class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:22'!dibujarBoton3En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones  dibujarBotonBasuraEn: html conItem: toDoItem enVista: aVista! !!DibujadorDeItems class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:30'!dibujarBotonesCorrespondientesDe: toDoItem conHtml: html enVista: aVista			self dibujarBoton1En: html conItem: toDoItem enVista: aVista.			self dibujarBoton2En: html conItem: toDoItem enVista: aVista.			self dibujarBoton3En: html conItem: toDoItem enVista: aVista.! !Object subclass: #EstadoDeTarea	instanceVariableNames: 'toDoItem'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!EstadoDeTarea commentStamp: 'I 6/23/2018 18:51' prior: 0!Yo represento el padre de una jerarquía que brinda estados a los ToDo items!!EstadoDeTarea methodsFor: 'accessing' stamp: 'EzequielMasciarelli 5/6/2018 18:42'!start	"Por defecto no hace nada"! !!EstadoDeTarea methodsFor: 'testing' stamp: 'I 6/23/2018 17:27'!isPaused	^ false! !!EstadoDeTarea methodsFor: 'testing' stamp: 'I 6/24/2018 21:27'!isInProgress	^false	! !!EstadoDeTarea methodsFor: 'testing' stamp: 'I 6/23/2018 17:25'!isFinished	^false! !!EstadoDeTarea methodsFor: 'testing' stamp: 'I 6/23/2018 18:19'!isPending	^false! !!EstadoDeTarea methodsFor: 'adding' stamp: 'I 6/25/2018 09:16'!addComment: aComment	toDoItem comment: aComment! !!EstadoDeTarea methodsFor: 'async' stamp: 'I 6/23/2018 17:49'!togglePause	self error! !!EstadoDeTarea methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 18:46'!finish! !!EstadoDeTarea methodsFor: 'initialization' stamp: 'I 6/23/2018 17:51'!workedTimeself error! !!EstadoDeTarea methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 18:40'!referenciaAToDoItem: aItemtoDoItem := aItem	! !!EstadoDeTarea methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 13:00'!actualState	 self subclassResponsibility! !!EstadoDeTarea methodsFor: 'accessing structure variables' stamp: 'EzequielMasciarelli 6/23/2018 11:09'!stateself subclassResponsibility ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EstadoDeTarea class	instanceVariableNames: ''!!EstadoDeTarea class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 18:41'!conReferenciaAToDoItem: aItem	^ self new referenciaAToDoItem: aItem! !EstadoDeTarea subclass: #Finished	instanceVariableNames: 'comentario'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!Finished methodsFor: 'accessing structure variables' stamp: 'I 6/23/2018 15:48'!state	^ 'Finished '! !!Finished methodsFor: 'adding' stamp: 'EzequielMasciarelli 5/6/2018 18:57'!addComment: aCommentcomentario :=aComment ! !!Finished methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 19:34'!finalizar	toDoItem finalizar! !!Finished methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 19:28'!workedTime	^toDoItem tiempoTranscurridoHastaFin! !!Finished methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 11:10'!actualState	^ self state, 'en ' , self workedTime asString! !!Finished methodsFor: 'testing' stamp: 'I 6/23/2018 17:25'!isFinished	^true! !EstadoDeTarea subclass: #InProgress	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!InProgress methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 19:34'!finish	toDoItem cambiarEstado: (Finished conReferenciaAToDoItem: toDoItem) finalizar! !!InProgress methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 19:27'!workedTime	^ toDoItem tiempoTranscurridoHastaAhora! !!InProgress methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 11:10'!actualState	^ self state, ' -' , ' Comenzada hace ' , self workedTime asString! !!InProgress methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 18:45'!togglePause		toDoItem cambiarEstado: (Paused conReferenciaAToDoItem: toDoItem)! !!InProgress methodsFor: 'testing' stamp: 'I 6/24/2018 21:28'!isInProgress	^true! !!InProgress methodsFor: 'accessing structure variables' stamp: 'I 6/23/2018 15:48'!state	^ 'InProgress '! !WAComponent subclass: #IndexToDoItemComponent	instanceVariableNames: 'listaActual seleccion'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!IndexToDoItemComponent commentStamp: 'I 6/23/2018 18:49' prior: 0!Yo soy la vista principal de la aplicación. Desde mí se renderizan las otras vistas!!IndexToDoItemComponent methodsFor: 'rendering' stamp: 'I 6/23/2018 12:47'!renderContentOn: html	html		form: [ html				tbsContainerFluid: [ html heading: [ html text: 'ToDoList App' ].					html break.					html						text: 'Ver ';						space.					html						tbsButtonGroup: [ html tbsDropdownButton								beDefault;								with: [ html										text: seleccion ;										tbsCaret ].							html								tbsDropdownMenu: (self generateDropDownButton: html);								space ].					html						space;						space;						space.					html anchor						callback: [ self agregarItem ];						with: 'Agregar Item'.					html horizontalRule.					self generarTabla: html ] ]! !!IndexToDoItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/23/2018 10:43'!toDoList	"LEER EL METODO DE CLASE DE ESTA CLASE PARA VER POR QUE HACEMOS ESTO"	^ ToDoList singleton! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/25/2018 09:06'!cargar: aBlock	"self halt."	listaActual := ToDoList singleton items		select: [ :item | 			aBlock value: item. ]! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 18:25'!dibujate: html conItem: unItem	html		tableRow: [ html				tableData: [ html heading level3						with: [ html anchor								callback: [ self mostrarDetalles: unItem ];								with: unItem name ] ].			html tableData: unItem actualState.			html space: 50.			"MAL OLOR, pero se realiza para evitar acoplamiento al modelo, el patron observer y visitor deberian hacer que el modelo conoscan a la vista y esto no parece bien"				unItem isPending				ifTrue: [ ItemPending dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ]				ifFalse: [ unItem isPaused						ifTrue: [ ItemPaused dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ]						ifFalse: [ unItem isFinished								ifTrue: [ ItemFinished dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ]								ifFalse: [ ItemInProgress dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ] ] ].			html horizontalRule ].	html break! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/22/2018 00:01'!agregarItem	| add |	add := AgregarItemComponent nuevoItem.	self call: add! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/25/2018 09:08'!generateDropDownButton: html	| menu |	menu := [ html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargarTodas.					seleccion := 'Todas' ];				with: 'Todas' ].	html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargar: [ :item | item isInProgress ].					seleccion := 'En Progreso' ];				with: 'En Progreso' ].		html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargar: [ :item | item isPaused ].					seleccion := 'Pausadas' ];				with: 'Pausadas' ].	html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargar: [ :item | item isFinished ].					seleccion := 'Terminadas' ];				with: 'Terminadas' ].	html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargar: [ :item | item isPending ].					seleccion := 'Pendientes' ];				with: 'Pendientes' ] ].	^ menu! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 12:25'!generarTabla: html	listaActual do: [ :each | self dibujate: html conItem: each ]! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/22/2018 00:14'!mostrarDetalles: unItem	|nuevaVista|	nuevaVista := ToDoDetallesComponent ConToDo: unItem .	self show: nuevaVista .	! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 12:27'!cargarTodas	listaActual := ToDoList singleton items! !!IndexToDoItemComponent methodsFor: 'initialization' stamp: 'I 6/23/2018 12:39'!initialize	super initialize.	listaActual := ToDoList singleton items.	seleccion := 'Todas'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!IndexToDoItemComponent class	instanceVariableNames: ''!!IndexToDoItemComponent class methodsFor: 'initialization' stamp: 'I 6/24/2018 16:45'!initialize| app |	app := WAAdmin register: self asApplicationAt: 'ToDoList'.	app		addLibrary: JQDeploymentLibrary;		addLibrary: TBSDevelopmentLibrary.! !!IndexToDoItemComponent class methodsFor: 'testing' stamp: 'EzequielMasciarelli 6/20/2018 13:12'!canBeRoot	^true! !!IndexToDoItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:59'!conNuevoItem: item	"TODA ESTA VUELTA FUE PARA PODER RECICLAR EL COMPONENTE AgregarItemComponent, por esta razon no estamos usando el self answer en la creacion de un item. VER metodo #cancel de AgregarItemComponent para mas informacion"	| nue |	nue := self new.	nue toDoList addItem: item.	^nue.! !DibujadorDeItems subclass: #ItemFinished	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemFinished class	instanceVariableNames: ''!!ItemFinished class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:28'!dibujarBoton2En: html conItem: toDoItem enVista: aVista! !!ItemFinished class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:27'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonFinalizadoEn: html conItem: toDoItem enVista: aVista! !DibujadorDeItems subclass: #ItemInProgress	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemInProgress class	instanceVariableNames: ''!!ItemInProgress class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:25'!dibujarBoton2En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonFinalizarEn: html conItem: toDoItem enVista: aVista! !!ItemInProgress class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:25'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonPausarEn: html conItem: toDoItem enVista: aVista	! !DibujadorDeItems subclass: #ItemPaused	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemPaused class	instanceVariableNames: ''!!ItemPaused class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:15'!dibujarBoton2En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones  dibujarBotonFinalizarEn: html conItem: toDoItem enVista: aVista! !!ItemPaused class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:24'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonReanudarEn: html conItem: toDoItem enVista: aVista! !DibujadorDeItems subclass: #ItemPending	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemPending class	instanceVariableNames: ''!!ItemPending class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:02'!dibujarBoton2En: html conItem: toDoItem enVista:aVista	! !!ItemPending class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:15'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones  dibujarBotonStartEn: html conItem: toDoItem enVista: aVista! !EstadoDeTarea subclass: #Paused	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!Paused methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 19:27'!workedTime	^ toDoItem tiempoTranscurridoHastaAhora! !!Paused methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 11:11'!actualState	^ self state, ' - ' , 'Comenzada hace ' , self workedTime asString! !!Paused methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 18:46'!togglePause	toDoItem cambiarEstado: (InProgress conReferenciaAToDoItem: toDoItem)! !!Paused methodsFor: 'testing' stamp: 'I 6/23/2018 17:24'!isPaused	^true! !!Paused methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 19:35'!finish	toDoItem cambiarEstado: (Finished conReferenciaAToDoItem: toDoItem) finalizar! !!Paused methodsFor: 'accessing structure variables' stamp: 'I 6/23/2018 15:48'!state	^ 'Paused '! !EstadoDeTarea subclass: #Pending	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!Pending methodsFor: 'testing' stamp: 'I 6/23/2018 18:19'!isPending	^true! !!Pending methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 11:11'!actualState	^ self state! !!Pending methodsFor: 'accessing' stamp: 'I 6/24/2018 20:03'!start	"Hasta la vista, baby (me mato a mi mismo haciendo esto)"	toDoItem iniciarFecha .	toDoItem cambiarEstado: (InProgress conReferenciaAToDoItem: toDoItem)! !!Pending methodsFor: 'accessing structure variables' stamp: 'I 6/23/2018 15:48'!state	^ 'Pending '! !WAComponent subclass: #ToDoDetallesComponent	instanceVariableNames: 'toDoItem comentario'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!ToDoDetallesComponent commentStamp: 'I 6/23/2018 18:49' prior: 0!Yo pinto un item junto con sus comentarios. Doy la interfaz para crear nuevos comentarios.!!ToDoDetallesComponent methodsFor: 'rendering' stamp: 'I 6/23/2018 15:46'!renderContentOn: html	html		form: [ html				tbsContainerFluid: [ self dibujarBarra: html.					self dibujarComentarios: html.					html break.					html break.					html break.					html						tbsFormGroup: [ html label with: 'Nuevo Comentario'.							html textInput								tbsFormControl;								placeholder: 'Descripción y comentarios del item';								on: #comment of: self ].					html tbsButton						bePrimary;						beLarge;						callback: [ self save ];						value: 'Guardar Comentario'.					html space: 10.					html tbsButton						bePrimary;						beLarge;						callback: [ self answer ];						value: 'Volver' ] ]! !!ToDoDetallesComponent methodsFor: 'accessing' stamp: 'I 6/23/2018 15:44'!comment	^ ''! !!ToDoDetallesComponent methodsFor: 'accessing' stamp: 'I 6/21/2018 23:09'!comment: aString	comentario := aString.	! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:50'!dibujarUnComentario: unCommentario En: html	html		tableRow: [ html tableData: unCommentario.			html space: 10.			self dibujarBotonDeBasuraEn: html ConComentario: unCommentario.			html break.			html break.			 ]! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:42'!borrarComentario: unComentario	toDoItem removeComment: unComentario .! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 18:23'!dibujarBarra: html	html		tableRow: [ html tableData: [ html heading level3 with: toDoItem name ].			html tableData: toDoItem actualState.			html space: 50.			toDoItem isPending				ifTrue: [ ItemPending dibujarBotonesCorrespondientesDe: toDoItem conHtml: html enVista: self ]				ifFalse: [ toDoItem isPaused 						ifTrue: [ ItemPaused dibujarBotonesCorrespondientesDe: toDoItem conHtml: html enVista: self ]						ifFalse: [ toDoItem isFinished 								ifTrue: [ ItemFinished dibujarBotonesCorrespondientesDe: toDoItem conHtml: html enVista: self									 ]								ifFalse: [ ItemInProgress dibujarBotonesCorrespondientesDe: toDoItem conHtml: html enVista: self ] ] ].			html horizontalRule.			html break.			html break ]! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:42'!dibujarBotonDeBasuraEn: html ConComentario: unComentario	html imageButton		callback: [ self borrarComentario: unComentario  ];		width: 30;		height: 30;		resourceUrl: 'https://cdn4.iconfinder.com/data/icons/email-2-2/32/Trash-Email-Bin-512.png'.	html space: 5! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/23/2018 15:19'!dibujarComentarios: html	toDoItem comentarios do: [ :comment | self dibujarUnComentario: comment En: html ]! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/21/2018 16:46'!miItem: aToDoItem	toDoItem  := aToDoItem! !!ToDoDetallesComponent methodsFor: 'actions' stamp: 'I 6/23/2018 15:43'!save	comentario = ''		ifFalse: [ toDoItem addComment: comentario ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ToDoDetallesComponent class	instanceVariableNames: ''!!ToDoDetallesComponent class methodsFor: 'enumerating' stamp: 'I 6/21/2018 16:40'!ConToDo: aToDoItem	^self new miItem: aToDoItem .! !Object subclass: #ToDoItem	instanceVariableNames: 'estado name fechaInicio fechaFin comentarios'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!ToDoItem commentStamp: 'I 6/23/2018 18:50' prior: 0!Yo soy un item ToDo!!ToDoItem methodsFor: 'accessing' stamp: 'I 6/25/2018 09:16'!comment: aString		comentarios add: aString! !!ToDoItem methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 18:16'!name^name ! !!ToDoItem methodsFor: 'accessing' stamp: 'EzequielMasciarelli 5/6/2018 18:37'!name:aStringname := aString ! !!ToDoItem methodsFor: 'as yet unclassified' stamp: 'I 6/21/2018 17:42'!comentarios	^comentarios ! !!ToDoItem methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/6/2018 18:53'!tiempoTranscurridoHastaFin	^ fechaFin  - fechaInicio! !!ToDoItem methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 5/10/2018 06:13'!finalizar	fechaFin := DateAndTime now.! !!ToDoItem methodsFor: 'as yet unclassified' stamp: 'I 6/24/2018 20:02'!iniciarFecha	fechaInicio := DateAndTime now.! !!ToDoItem methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 13:01'!actualState	^ estado actualState ! !!ToDoItem methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 19:57'!tiempoTranscurridoHastaAhora	^ DateAndTime now - fechaInicio! !!ToDoItem methodsFor: 'removing' stamp: 'I 6/23/2018 15:40'!removeComment: aComment	comentarios remove: aComment .! !!ToDoItem methodsFor: 'testing' stamp: 'I 6/23/2018 17:41'!isPaused^	estado isPaused! !!ToDoItem methodsFor: 'testing' stamp: 'I 6/25/2018 09:07'!isInProgress	^estado isInProgress! !!ToDoItem methodsFor: 'testing' stamp: 'I 6/23/2018 17:41'!isFinished^	estado isFinished! !!ToDoItem methodsFor: 'testing' stamp: 'I 6/23/2018 18:21'!isPending	^ estado isPending! !!ToDoItem methodsFor: 'accessing structure variables' stamp: 'EzequielMasciarelli 6/23/2018 11:12'!state^estado state! !!ToDoItem methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 18:58'!finish	estado finish! !!ToDoItem methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 18:42'!cambiarEstado:anEstadoestado :=anEstado ! !!ToDoItem methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 18:38'!start estado start.! !!ToDoItem methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 18:58'!togglePause	estado togglePause! !!ToDoItem methodsFor: 'initialization' stamp: 'EzequielMasciarelli 5/6/2018 19:28'!workedTime	^ estado workedTime! !!ToDoItem methodsFor: 'initialization' stamp: 'I 6/24/2018 20:01'!initialize	estado := Pending conReferenciaAToDoItem: self.	comentarios := OrderedCollection new! !!ToDoItem methodsFor: 'adding' stamp: 'I 6/25/2018 09:17'!addComment: aString	estado addComment: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ToDoItem class	instanceVariableNames: ''!!ToDoItem class methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 13:05'!name:aString^ self new name:aString! !TestCase subclass: #ToDoItemTest	instanceVariableNames: 'toDoItem'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!ToDoItemTest methodsFor: 'tests' stamp: 'I 6/25/2018 09:18'!testAddComment	toDoItem addComment: 'Este test está saliendo bien'.	self assert: (toDoItem comentarios includes: 'Este test está saliendo bien').	toDoItem start.	toDoItem finish.	toDoItem addComment: '¿Este test terminará bien?'.	self deny: (toDoItem comentarios includes: '¿Este test terminará bien?').! !!ToDoItemTest methodsFor: 'tests' stamp: 'I 6/23/2018 17:33'!testToggle	toDoItem start.	self deny: toDoItem isFinished.	self deny: toDoItem isPaused.	toDoItem togglePause.	self assert: toDoItem isPaused.	toDoItem  finish.	self deny: toDoItem isPaused.! !!ToDoItemTest methodsFor: 'tests' stamp: 'I 6/23/2018 17:37'!testName	self assert: toDoItem name = 'Prueba'! !!ToDoItemTest methodsFor: 'tests' stamp: 'I 6/23/2018 17:32'!testStartAndFinish	toDoItem start.	self deny: toDoItem isFinished.	toDoItem finish.	self assert: toDoItem isFinished.	! !!ToDoItemTest methodsFor: 'tests' stamp: 'I 6/25/2018 13:31'!testWorkedTime	| firstTime secondTime finishTime1 finishTime2 |	self should: [ toDoItem workedTime ] raise: Error.	toDoItem start.	firstTime := toDoItem workedTime.	(Delay forSeconds: 1) wait.	toDoItem togglePause.	secondTime := toDoItem workedTime.	self deny: (secondTime = firstTime).	"Testeo que esté avanzando el reloj"	toDoItem finish.	finishTime1 := toDoItem workedTime.	(Delay forSeconds: 1) wait.	finishTime2 := toDoItem workedTime.	self assert: (finishTime1 = finishTime2)	"Testeo que una vez finalizda la tarea no avance el reloj"! !!ToDoItemTest methodsFor: 'initialization' stamp: 'I 6/23/2018 17:11'!setUp	toDoItem := ToDoItem name: 'Prueba'.! !Object subclass: #ToDoList	instanceVariableNames: 'items'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!ToDoList commentStamp: 'I 6/23/2018 18:51' prior: 0!Yo junto varios items en una Ordered Collection!!ToDoList methodsFor: 'adding' stamp: 'EzequielMasciarelli 6/20/2018 17:41'!addItem: anItem	items add: anItem! !!ToDoList methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 19:45'!deleteItem:itemitems remove: item.! !!ToDoList methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 15:03'!items	^ items! !!ToDoList methodsFor: 'initialization' stamp: 'EzequielMasciarelli 6/20/2018 13:04'!initializeitems := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ToDoList class	instanceVariableNames: 'singleton'!!ToDoList class methodsFor: 'instance creation' stamp: 'EzequielMasciarelli 6/20/2018 15:27'!singleton	^singleton ifNil: [ singleton := self new ]	! !!ToDoList class methodsFor: 'singleton' stamp: 'EzequielMasciarelli 6/20/2018 17:48'!resetSingletonsingleton :=nil.! !TestCase subclass: #ToDoListTest	instanceVariableNames: 'items'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-Model-Test-App'!!ToDoListTest methodsFor: 'initialization' stamp: 'I 6/23/2018 18:27'!setUp	items := ToDoList new! !!ToDoListTest methodsFor: 'tests' stamp: 'I 6/23/2018 18:33'!testAddItem	| tamaño elItem|	elItem := ToDoItem name: 'unitem'.	tamaño := items items size.	items addItem: elItem .	self deny: tamaño = (items items size + 1).	items deleteItem: elItem.	self assert: tamaño = items items size! !IndexToDoItemComponent initialize!