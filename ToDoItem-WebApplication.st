WAComponent subclass: #AgregarItemComponent	instanceVariableNames: 'nombre comentario item stringError'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!!AgregarItemComponent methodsFor: 'actions' stamp: 'EzequielMasciarelli 6/20/2018 17:32'!cancel	"NOTA: NO SE ESTA UTILIZANDO EL METODO SELF ANSWER YA QUE PARA NO GENERAR DOS VISTAS DIFERENTES CUANDO SE PRODUCE UN ERROR SE ESTA VOLVIENDO A LLAMAR A ESTA MISMA VISTA DESDE EL SAVE"	self call: IndexToDoItemComponent new! !!AgregarItemComponent methodsFor: 'actions' stamp: 'EzequielMasciarelli 6/20/2018 17:58'!save	nombre = ''		ifFalse: [ item := ToDoItem name: nombre.			comentario = ''				ifFalse: [ item addComment: comentario ].			self call: (IndexToDoItemComponent conNuevoItem: item)]		ifTrue: [ self call: (AgregarItemComponent errorDeCampo: comentario) ]! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!name: aString	nombre:=aString! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!comment	^ comentario ! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!name	^ nombre ! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!comment: aString	comentario :=aString! !!AgregarItemComponent methodsFor: 'rendering' stamp: 'EzequielMasciarelli 6/20/2018 17:24'!renderContentOn: html	html		tbsContainerFluid: [ html heading: [ html text: 'ToDoList App' ].			html heading				level: 3;				with: 'Crear item'.			self crearErrorDeSerNecesario: html.			html				form: [ html horizontalRule.					html strong: 'Nombre: '.					html space: 20.					html textInput on: #name of: self.					html						break;						break;						break.					html strong: 'Comentarios: '.					html space: 12.					html textInput on: #comment of: self.					html						break;						break.					html submitButton						callback: [ self save ];						value: 'Guardar'.					html space: 30.					html submitButton						callback: [ self cancel ];						value: 'Cancelar' ] ]! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!inicializarNuevonombre :=''.comentario :=''.! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:26'!crearErrorDeSerNecesario: html	stringError isNil		ifFalse: [ html break.			html text: stringError .			html break ]	! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:25'!inicializarError: aString	stringError:= 'Error, ingrese un nombre'.	nombre := ''.	comentario := aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AgregarItemComponent class	instanceVariableNames: ''!!AgregarItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:02'!nuevoItem	^self new inicializarNuevo! !!AgregarItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:18'!errorDeCampo: aString	^ self new inicializarError:aString! !WAComponent subclass: #IndexToDoItemComponent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!!IndexToDoItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 18:30'!toDoList	"LEER EL METODO DE CLASE DE ESTA CLASE PARA VER POR QUE HACEMOS ESTO"	^ ToDoList singleton! !!IndexToDoItemComponent methodsFor: 'rendering' stamp: 'EzequielMasciarelli 6/20/2018 19:42'!renderContentOn: html	html form:[html		tbsContainerFluid: [ html heading: [ html text: 'ToDoList App' ].			html break.			html				text: 'Ver ';				space.			html				tbsButtonGroup: [ html tbsDropdownButton						beDefault;						with: [ html								text: 'Todas ';								tbsCaret ].					html						tbsDropdownMenu: (self generateDropDownButton: html);						space ].			html				space;				space;				space.			html anchor				callback: [ self agregarItem ];				with: 'Agregar Item'.			html horizontalRule.			self generarTabla: html ]]! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 19:17'!generarTabla: html	self toDoList items do: [ :each | each dibujate: html conComponente: self ]! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:02'!agregarItem	| add |	add := AgregarItemComponent nuevoItem.	self call: add! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 14:40'!generateDropDownButton: html	| menu |	menu := [ html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargarTodas ];				with: 'Todas' ].	html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargarEnProgreso ];				with: 'En Progreso' ].	html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargarPausadas ];				with: 'Pausadas' ].	html tbsDropdownMenuItem: [ html anchor callback:[self cargarTerminadas];with: 'Terminadas' ] ].	^ menu! !!IndexToDoItemComponent methodsFor: 'initialization' stamp: 'EzequielMasciarelli 6/20/2018 18:31'!initialize	super initialize.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!IndexToDoItemComponent class	instanceVariableNames: ''!!IndexToDoItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:59'!conNuevoItem: item	"TODA ESTA VUELTA FUE PARA PODER RECICLAR EL COMPONENTE AgregarItemComponent, por esta razon no estamos usando el self answer en la creacion de un item. VER metodo #cancel de AgregarItemComponent para mas informacion"	| nue |	nue := self new.	nue toDoList addItem: item.	^nue.! !!IndexToDoItemComponent class methodsFor: 'testing' stamp: 'EzequielMasciarelli 6/20/2018 13:12'!canBeRoot	^true! !