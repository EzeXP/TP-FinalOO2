WAComponent subclass: #AgregarItemComponent	instanceVariableNames: 'nombre comentario item stringError toDoList'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!!AgregarItemComponent methodsFor: 'actions' stamp: 'EzequielMasciarelli 6/20/2018 17:32'!cancel	"NOTA: NO SE ESTA UTILIZANDO EL METODO SELF ANSWER YA QUE PARA NO GENERAR DOS VISTAS DIFERENTES CUANDO SE PRODUCE UN ERROR SE ESTA VOLVIENDO A LLAMAR A ESTA MISMA VISTA DESDE EL SAVE"	self call: IndexToDoItemComponent new! !!AgregarItemComponent methodsFor: 'actions' stamp: 'I 6/22/2018 00:02'!save	nombre = ''		ifFalse: [ item := ToDoItem name: nombre.			comentario = ''				ifFalse: [ item addComment: comentario ].			ToDoList singleton addItem: item.			self answer ]		ifTrue: [ stringError := 'Debe ingresar un nombre antes de guardar' ]! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!name: aString	nombre:=aString! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!comment	^ comentario ! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!name	^ nombre ! !!AgregarItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!comment: aString	comentario :=aString! !!AgregarItemComponent methodsFor: 'rendering' stamp: 'EzequielMasciarelli 6/20/2018 17:24'!renderContentOn: html	html		tbsContainerFluid: [ html heading: [ html text: 'ToDoList App' ].			html heading				level: 3;				with: 'Crear item'.			self crearErrorDeSerNecesario: html.			html				form: [ html horizontalRule.					html strong: 'Nombre: '.					html space: 20.					html textInput on: #name of: self.					html						break;						break;						break.					html strong: 'Comentarios: '.					html space: 12.					html textInput on: #comment of: self.					html						break;						break.					html submitButton						callback: [ self save ];						value: 'Guardar'.					html space: 30.					html submitButton						callback: [ self cancel ];						value: 'Cancelar' ] ]! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:01'!inicializarNuevonombre :=''.comentario :=''.! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:26'!crearErrorDeSerNecesario: html	stringError isNil		ifFalse: [ html break.			html text: stringError .			html break ]	! !!AgregarItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:25'!inicializarError: aString	stringError:= 'Error, ingrese un nombre'.	nombre := ''.	comentario := aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AgregarItemComponent class	instanceVariableNames: ''!!AgregarItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:02'!nuevoItem	^self new inicializarNuevo! !!AgregarItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:18'!errorDeCampo: aString	^ self new inicializarError:aString! !WAComponent subclass: #DibujadorDeBotones	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DibujadorDeBotones class	instanceVariableNames: ''!!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 11:58'!dibujarBotonBasuraEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ ToDoList singleton deleteItem: toDoItem.			aVista call: IndexToDoItemComponent new ];		width: 30;		height: 30;		resourceUrl: 'https://cdn4.iconfinder.com/data/icons/email-2-2/32/Trash-Email-Bin-512.png'.	html space: 5	! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:13'!dibujarBotonStartEn: html conItem: toDoItem enVista: aVista	html imageButton		width: 30;		height: 30;		url: 'https://image.flaticon.com/icons/svg/26/26025.svg';		callback: [ toDoItem start.			aVista call: IndexToDoItemComponent new ].	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:27'!dibujarBotonFinalizadoEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [  ];		width: 30;		height: 30;		resourceUrl: 'https://cdn3.iconfinder.com/data/icons/sympletts-free-sampler/128/circle-check-512.png'.	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:24'!dibujarBotonReanudarEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ toDoItem togglePause.			aVista call: IndexToDoItemComponent new ];		width: 30;		height: 30;		resourceUrl: 'https://image.flaticon.com/icons/svg/26/26025.svg'.	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:24'!dibujarBotonPausarEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ toDoItem togglePause.			aVista call: IndexToDoItemComponent new ];		width: 30;		height: 30;		resourceUrl: 'https://cdn4.iconfinder.com/data/icons/user-interface-59/83/Pause-512.png'.	html space: 5! !!DibujadorDeBotones class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:18'!dibujarBotonFinalizarEn: html conItem: toDoItem enVista: aVista	html imageButton		callback: [ toDoItem  finish.			aVista call: IndexToDoItemComponent new ];		width: 30;		height: 30;		resourceUrl: 'https://cdn2.iconfinder.com/data/icons/classic-development-circle/512/start_flag-512.png'.	html space: 5! !WAComponent subclass: #DibujadorDeItems	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DibujadorDeItems class	instanceVariableNames: ''!!DibujadorDeItems class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:22'!dibujarBoton3En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones  dibujarBotonBasuraEn: html conItem: toDoItem enVista: aVista! !!DibujadorDeItems class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:30'!dibujarBotonesCorrespondientesDe: toDoItem conHtml: html enVista: aVista			self dibujarBoton1En: html conItem: toDoItem enVista: aVista.			self dibujarBoton2En: html conItem: toDoItem enVista: aVista.			self dibujarBoton3En: html conItem: toDoItem enVista: aVista.! !WAComponent subclass: #IndexToDoItemComponent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!!IndexToDoItemComponent methodsFor: 'accessing' stamp: 'EzequielMasciarelli 6/23/2018 10:43'!toDoList	"LEER EL METODO DE CLASE DE ESTA CLASE PARA VER POR QUE HACEMOS ESTO"	^ ToDoList singleton! !!IndexToDoItemComponent methodsFor: 'rendering' stamp: 'I 6/21/2018 00:26'!renderContentOn: html	html		form: [ html				tbsContainerFluid: [ html heading: [ html text: 'ToDoList App' ].					html break.					html						text: 'Ver ';						space.					html						tbsButtonGroup: [ html tbsDropdownButton								beDefault;								with: [ html										text: 'Todas ';										tbsCaret ].							html								tbsDropdownMenu: (self generateDropDownButton: html);								space ].					html						space;						space;						space.					html anchor						callback: [ self agregarItem ];						with: 'Agregar Item'.					html horizontalRule.					self generarTabla: html ] ]! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/22/2018 00:14'!mostrarDetalles: unItem	|nuevaVista|	nuevaVista := ToDoDetallesComponent ConToDo: unItem .	self show: nuevaVista .	! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/22/2018 00:01'!agregarItem	| add |	add := AgregarItemComponent nuevoItem.	self call: add! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'I 6/21/2018 23:01'!generarTabla: html	self toDoList items		do: [ :each | 			self dibujate: html conItem: each.			 ]! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 14:40'!generateDropDownButton: html	| menu |	menu := [ html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargarTodas ];				with: 'Todas' ].	html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargarEnProgreso ];				with: 'En Progreso' ].	html		tbsDropdownMenuItem: [ html anchor				callback: [ self cargarPausadas ];				with: 'Pausadas' ].	html tbsDropdownMenuItem: [ html anchor callback:[self cargarTerminadas];with: 'Terminadas' ] ].	^ menu! !!IndexToDoItemComponent methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:38'!dibujate: html conItem: unItem	html		tableRow: [ html				tableData: [ html heading level3						with: [ html anchor								callback: [ self mostrarDetalles: unItem ];								with: unItem name ] ].			html tableData: unItem actualState.			html space: 50.			"MAL OLOR, pero se realiza para evitar acoplamiento al modelo, el patron observer y visitor deberian hacer que el modelo conoscan a la vista y esto no parece bien"			unItem state = 'Pending'				ifTrue: [ ItemPending dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ]				ifFalse: [ unItem state = 'Paused'						ifTrue: [ ItemPaused dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ]						ifFalse: [ unItem state = 'InProgress'								ifTrue: [ ItemInProgress dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ]								ifFalse: [ ItemFinished dibujarBotonesCorrespondientesDe: unItem conHtml: html enVista: self ] ] ].			html horizontalRule ].	html break! !!IndexToDoItemComponent methodsFor: 'initialization' stamp: 'EzequielMasciarelli 6/20/2018 18:31'!initialize	super initialize.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!IndexToDoItemComponent class	instanceVariableNames: ''!!IndexToDoItemComponent class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/20/2018 17:59'!conNuevoItem: item	"TODA ESTA VUELTA FUE PARA PODER RECICLAR EL COMPONENTE AgregarItemComponent, por esta razon no estamos usando el self answer en la creacion de un item. VER metodo #cancel de AgregarItemComponent para mas informacion"	| nue |	nue := self new.	nue toDoList addItem: item.	^nue.! !!IndexToDoItemComponent class methodsFor: 'testing' stamp: 'EzequielMasciarelli 6/20/2018 13:12'!canBeRoot	^true! !DibujadorDeItems subclass: #ItemFinished	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemFinished class	instanceVariableNames: ''!!ItemFinished class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:27'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonFinalizadoEn: html conItem: toDoItem enVista: aVista! !!ItemFinished class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:28'!dibujarBoton2En: html conItem: toDoItem enVista: aVista! !DibujadorDeItems subclass: #ItemInProgress	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemInProgress class	instanceVariableNames: ''!!ItemInProgress class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:25'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonPausarEn: html conItem: toDoItem enVista: aVista	! !!ItemInProgress class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:25'!dibujarBoton2En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonFinalizarEn: html conItem: toDoItem enVista: aVista! !DibujadorDeItems subclass: #ItemPaused	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemPaused class	instanceVariableNames: ''!!ItemPaused class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:24'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones dibujarBotonReanudarEn: html conItem: toDoItem enVista: aVista! !!ItemPaused class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:15'!dibujarBoton2En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones  dibujarBotonFinalizarEn: html conItem: toDoItem enVista: aVista! !DibujadorDeItems subclass: #ItemPending	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemPending class	instanceVariableNames: ''!!ItemPending class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:15'!dibujarBoton1En: html conItem: toDoItem enVista: aVista	DibujadorDeBotones  dibujarBotonStartEn: html conItem: toDoItem enVista: aVista! !!ItemPending class methodsFor: 'as yet unclassified' stamp: 'EzequielMasciarelli 6/23/2018 12:02'!dibujarBoton2En: html conItem: toDoItem enVista:aVista	! !WAComponent subclass: #ToDoDetallesComponent	instanceVariableNames: 'toDoItem comentario'	classVariableNames: ''	poolDictionaries: ''	category: 'ToDoItem-WebApplication'!!ToDoDetallesComponent methodsFor: 'accessing' stamp: 'I 6/21/2018 23:23'!comment	^''	! !!ToDoDetallesComponent methodsFor: 'accessing' stamp: 'I 6/21/2018 23:09'!comment: aString	comentario := aString.	! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/21/2018 17:47'!dibujarComentarios: html	toDoItem comentarios do: [ :comment | self dibujarUnComentario: comment En: html ]! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/22/2018 00:22'!dibujarUnComentario: unCommentario En: html	html		tableRow: [ html tableData: unCommentario.			self dibujarBoton3En: html .			html break.]! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/21/2018 17:56'!dibujarBarra: html	html		tableRow: [ html tableData: [ html heading level3 with: toDoItem name ].			html tableData: toDoItem actualState.			html space: 50.			self dibujarBoton3En: html.			self dibujarBoton3En: html.			self dibujarBoton3En: html.			html break.			html horizontalRule ]! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/21/2018 17:52'!dibujarBoton3En: html	html imageButton		callback: [  ];		width: 30;		height: 30;		resourceUrl: 'https://cdn2.iconfinder.com/data/icons/classic-development-circle/512/start_flag-512.png'.	html space: 5! !!ToDoDetallesComponent methodsFor: 'as yet unclassified' stamp: 'I 6/21/2018 16:46'!miItem: aToDoItem	toDoItem  := aToDoItem! !!ToDoDetallesComponent methodsFor: 'rendering' stamp: 'I 6/22/2018 00:17'!renderContentOn: htmlhtml form: [ html tbsContainerFluid: [ 	self dibujarBarra: html.	self dibujarComentarios: html.	html		tbsFormGroup: [ html label with: 'Nuevo Comentario'.			html textInput				tbsFormControl;				placeholder: 'Descripción y comentarios del item';				on: #comment of: self ].	html tbsButton		bePrimary;		beLarge;		callback: [ self save ];		value: 'Guardar Comentario'.		]	]! !!ToDoDetallesComponent methodsFor: 'actions' stamp: 'I 6/22/2018 00:23'!save	comentario isNil		ifFalse: [ toDoItem addComment: comentario ] .		self answer! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ToDoDetallesComponent class	instanceVariableNames: ''!!ToDoDetallesComponent class methodsFor: 'enumerating' stamp: 'I 6/21/2018 16:40'!ConToDo: aToDoItem	^self new miItem: aToDoItem .! !